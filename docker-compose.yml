version: '3'
services:
  db:
    image: docker.io/mysql:5.7
    container_name: mysql
    privileged: true
    env_file:
      - "/root/.env"
    environment:
      # 设置默认数据库和root默认密码,如果宿主机中/var/lib/mysql已经存在,这两个设置都不会生效
      - MYSQL_DATABASE="${FASTER_DB_NAME}"
      - MYSQL_USER="${FASTER_DB_USERNAME}"
      - MYSQL_ROOT_PASSWORD="${FASTER_DB_ROOT_PASSWORD}"
    volumes:
      - "/var/lib/mysql:/var/lib/mysql" # 挂载宿主机的mysql数据到docker中
      - "./FasterRunner/docker_mysql.cnf:/etc/mysql/mysql.conf.d/mysqld.cnf"  # 映射出mysql的配置文件
    # 端口映射,格式 宿主机端口:容器端口
    ports:
      - "3306:3306"
    restart: always
    # 容器开机启动命令
    command: --character-set-server=utf8mb4 --collation-server=utf8mb4_unicode_ci
    networks:
      - fasterrunner


  server:
    image: fasterrunner:latest
    container_name: fasterrunner
    privileged: true
    volumes:
      - ./FasterRunner:/opt/workspace/FasterRunner
      - ./FasterRunner/nginx.conf:/etc/nginx/sites-enabled/nginx.conf
    ports:
      - "8000:8000"
    restart: always
    networks:
      - fasterrunner

  web:
    image: nginx:latest
    container_name: fasterweb
    privileged: true
    volumes:
      - /root/code/FasterWeb/dist:/usr/share/nginx/html
      - /root/code/default.conf:/etc/nginx/conf.d/default.conf
    ports:
      - "80:8080"
    restart: always
    networks:
      - fasterrunner

  mq:
    image: rabbitmq:management-alpine
    container_name: rabbitmq
    env_file:
      - "/root/.env"
    environment:
      # mq的环境变量不能用""
      - RABBITMQ_DEFAULT_USER=${FASTER_MQ_USER}
      - RABBITMQ_DEFAULT_PASS=${FASTER_MQ_PASSWORD}
    restart: always
    ports:
      - "15672:15672"
      - "5672:5672"
    networks:
      - fasterrunner

networks:  # 指定了内网，可以在配置文件中直接使用容器名字，但是需要先在宿主机创建网络
  fasterrunner:
    external: true

